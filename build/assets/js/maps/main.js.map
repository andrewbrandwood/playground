{"version":3,"sources":["donate.js","forms_storage.js","main.js"],"names":["window","donationTargetState","apiUrl","this","setApiUrl","init","prototype","getValues","self","Promise","resolve","reject","request","XMLHttpRequest","open","onload","status","JSON","parse","responseText","Error","statusText","onerror","send","showElement","indicator","document","querySelector","classList","add","setValues","values","runningTotal","target","style","width","innerHTML","raised","calculateVisual","then","response","error","console","storeForms","storageType","setStorage","storageAvailable","forms","placeholders","querySelectorAll","formFields","bindEvents","populatePlaceholders","populateFormFields","x","storage","setItem","removeItem","e","addEventListener","processForm","bind","i","length","placeholder","name","getAttribute","value","getItem","showIf","hideIf","display","replace","processed","field","indexOf","type","fieldToCheck","checked","push","saveItem","key","event","elements","getFieldValue","trim"],"mappings":"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","file":"../main.js","sourcesContent":["(function() {\n  'use strict';\n\n    window.donationTargetState = function(apiUrl){\n\n      this.setApiUrl(apiUrl);\n      return this.init();\n    };\n\n    donationTargetState.prototype.setApiUrl = function(apiUrl) {\n      this.apiUrl = apiUrl;\n    };\n\n    donationTargetState.prototype.getValues = function(){\n      var self = this;\n      return new Promise(function(resolve, reject){\n        var request = new XMLHttpRequest();\n        request.open('GET', self.apiUrl, true);\n        request.onload = function(){\n          if(request.status == 200){\n            resolve(JSON.parse(request.responseText));\n          }else{\n            reject(Error(request.statusText));\n          }\n        };\n\n        request.onerror = function() {\n          reject(Error(\"Network Error\"));\n        };\n\n        request.send();\n      });\n\n    };\n\n    donationTargetState.prototype.showElement = function(){\n      var indicator = document.querySelector('[data-target-indicator]');\n      indicator.classList.add('show');\n    };\n\n    donationTargetState.prototype.setValues = function(values){\n      var runningTotal = document.querySelector('[data-donation-running-total]');\n      var target = document.querySelector('[data-donation-target]');\n      var indicator = document.querySelector('[data-target-bar-indicator]');\n      indicator.style.width = '80%';\n      runningTotal.innerHTML = values.raised;\n      target.innerHTML = values.target;\n    };\n\n    donationTargetState.prototype.calculateVisual = function(){\n      var self = this;\n      this.getValues()\n      .then(function(response){\n        self.setValues(response);\n        self.showElement();\n      }, function(error){\n        console.error('error', error);\n      });\n    };\n\n    donationTargetState.prototype.init = function() {\n      this.calculateVisual();\n    };\n\n  }());\n","(function() {\n  'use strict';\n\n  window.storeForms = function(storageType) {\n    this.setStorage(storageType);\n    return this.init();\n  };\n\n  storeForms.prototype.setStorage = function(storageType) {\n    this.storageType = storageType ? storageType : 'sessionStorage';\n  };\n\n  storeForms.prototype.init = function() {\n    if (this.storageAvailable()) {\n      this.forms = document.querySelector('form');\n      this.placeholders = document.querySelectorAll('[data-name]');\n      this.formFields = document.querySelectorAll('form [name]');\n\n      this.bindEvents();\n      this.populatePlaceholders();\n      this.populateFormFields();\n    }\n  };\n\n  storeForms.prototype.storageAvailable = function() {\n    try {\n      var x = '__storage_test__';\n      this.storage = window[this.storageType];\n      this.storage.setItem(x, x);\n      this.storage.removeItem(x);\n      return true;\n    }\n    catch(e) {\n      return false;\n    }\n  };\n\n  storeForms.prototype.bindEvents = function() {\n    if (this.forms) {\n      this.forms.addEventListener('submit', this.processForm.bind(this));\n    }\n  };\n\n  storeForms.prototype.populatePlaceholders = function() {\n    for (var i = 0; i < this.placeholders.length; i++) {\n      var placeholder = this.placeholders[i],\n          name = placeholder.getAttribute('data-name'),\n          value = this.getItem(name) || '',\n          showIf = placeholder.getAttribute('data-show-if'),\n          hideIf = placeholder.getAttribute('data-hide-if');\n\n      if (name) {\n        if (showIf) {\n          if (showIf === ':empty') {\n            if (value) {\n              placeholder.style.display = 'none';\n            }\n          }\n          else if (showIf !== value) {\n            placeholder.style.display = 'none';\n          }\n        }\n        else if (hideIf) {\n          if (hideIf === ':empty') {\n            if (!value) {\n              placeholder.style.display = 'none';\n            }\n          }\n          else if (hideIf === value) {\n            placeholder.style.display = 'none';\n          }\n        }\n        else {\n          placeholder.innerHTML = value.replace(/\\n\\r?/g, '<br />');\n        }\n      }\n    }\n  };\n\n  storeForms.prototype.populateFormFields = function() {\n    var processed = [];\n\n    if (this.formFields) {\n      for (var i = 0; i < this.formFields.length; i++) {\n        var field = this.formFields[i],\n            name = field.getAttribute('name'),\n            value = this.getItem(name);\n\n        if (name && processed.indexOf(name) === -1) {\n          switch(field.type) {\n            case 'radio':\n            case 'checkbox':\n            var fieldToCheck = document.querySelector('[name=\"' + name + '\"][value=\"' + value + '\"]');\n              if (fieldToCheck) {\n                fieldToCheck.checked = true;\n              }\n              break;\n            default:\n              if (value) {\n                field.value = value;\n              }\n              break;\n          }\n\n          processed.push(name);\n        }\n      }\n    }\n  };\n\n  storeForms.prototype.saveItem = function(key, value) {\n    this.storage.setItem(key, value);\n  };\n\n  storeForms.prototype.removeItem = function(key) {\n    this.storage.removeItem(key);\n  };\n\n  storeForms.prototype.getItem = function(key) {\n    return this.storage.getItem(key);\n  };\n\n  storeForms.prototype.processForm = function(event) {\n    var processed = [];\n\n    for (var i = 0; i < event.target.elements.length; i++) {\n      var field = event.target.elements[i],\n          name = field.getAttribute('name'),\n          value;\n\n      if (name && processed.indexOf(name) === -1) {\n        value = this.getFieldValue(field);\n\n        if (value) {\n          this.saveItem(name, value);\n        }\n        else {\n          this.removeItem(name);\n        }\n        processed.push(name);\n      }\n    }\n  };\n\n  storeForms.prototype.getFieldValue = function(field) {\n    if (!field) return;\n\n    switch(field.type) {\n      case 'radio':\n        var name = field.getAttribute('name'),\n            checked = document.querySelector('[name=\"' + name + '\"]:checked');\n        return checked ? checked.getAttribute('value') : '';\n      case 'checkbox':\n        return field.checked ? field.value : '';\n      default:\n        return field.value.trim();\n    }\n  };\n}());\n","//add js class to html\ndocument.querySelector('html').classList.add('js');\nvar storeForms = new storeForms();\nvar donationTargetState = new donationTargetState('https://coop-mock-test-api.herokuapp.com/');\n"]}